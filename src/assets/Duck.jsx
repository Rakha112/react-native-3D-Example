/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, {useMemo} from 'react';
import {PerspectiveCamera, useTexture} from '@react-three/drei/native';
import {useGLTFCustom} from '../useGLTFCustom';
import modelPath from './Duck.glb';
import texturePath from './Texture.png';
const Duck = props => {
  const {nodes, materials} = useGLTFCustom(modelPath);

  const texture = useTexture(texturePath, tex => {
    if (Array.isArray(tex)) {
      throw new Error('Array of textures is not supported');
    }
    tex.flipY = false;
    tex.unpackAlignment = 8;
  });
  const material003 = materials['blinn3-fx'];

  const duckMat = useMemo(() => {
    const material = material003.clone();

    material.map = texture;
    material.emissiveMap = texture;

    return material;
  }, [texture, material003]);
  return (
    <group {...props} dispose={null}>
      <group scale={0.01}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.LOD3spShape.geometry}
          material={duckMat}
        />
        <PerspectiveCamera
          makeDefault={false}
          far={10000}
          near={1}
          fov={37.849}
          position={[400.113, 463.264, -431.078]}
          rotation={[-2.314, 0.566, 2.614]}
        />
      </group>
    </group>
  );
};

export default Duck;
